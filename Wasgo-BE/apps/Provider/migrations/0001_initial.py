# Generated by Django 5.2.5 on 2025-08-24 12:32

import django.contrib.gis.db.models.fields
import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProviderEarnings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_type', models.CharField(choices=[('job_payment', 'ServiceRequest Payment'), ('tip', 'Customer Tip'), ('bonus', 'Performance Bonus'), ('withdrawal', 'Withdrawal'), ('commission', 'Platform Commission'), ('refund', 'Refund')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('is_settled', models.BooleanField(default=False)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'provider_earnings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_name', models.CharField(max_length=200)),
                ('business_type', models.CharField(choices=[('limited_company', 'Limited Company'), ('sole_trader', 'Sole Trader'), ('partnership', 'Partnership'), ('waste_collection', 'Waste Collection Company'), ('recycling_center', 'Recycling Center'), ('landfill_operator', 'Landfill Operator'), ('transfer_station', 'Transfer Station')], default='limited_company', max_length=20)),
                ('registration_number', models.CharField(blank=True, max_length=50)),
                ('vat_number', models.CharField(blank=True, max_length=50)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('postcode', models.CharField(max_length=20)),
                ('country', models.CharField(default='United Kingdom', max_length=100)),
                ('base_location', django.contrib.gis.db.models.fields.PointField(help_text="Provider's base location", srid=4326)),
                ('service_area', django.contrib.gis.db.models.fields.PolygonField(blank=True, help_text='Geographic service area', null=True, srid=4326)),
                ('max_service_radius_km', models.IntegerField(default=50, help_text='Maximum service radius from base location (km)')),
                ('waste_license_number', models.CharField(blank=True, help_text='Waste collection license number', max_length=100)),
                ('waste_license_expiry', models.DateField(blank=True, help_text='Waste collection license expiry date', null=True)),
                ('environmental_permit_number', models.CharField(blank=True, help_text='Environmental permit number', max_length=100)),
                ('environmental_permit_expiry', models.DateField(blank=True, help_text='Environmental permit expiry date', null=True)),
                ('waste_types_handled', models.JSONField(blank=True, default=list, help_text='Types of waste this provider can handle')),
                ('collection_methods', models.JSONField(blank=True, default=list, help_text='Collection methods available (manual, automated, etc.)')),
                ('vehicle_fleet_size', models.IntegerField(default=0, help_text='Number of waste collection vehicles')),
                ('daily_collection_capacity_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Daily waste collection capacity in kg', max_digits=10, null=True)),
                ('has_compaction_equipment', models.BooleanField(default=False, help_text='Provider has waste compaction equipment')),
                ('has_recycling_facilities', models.BooleanField(default=False, help_text='Provider has recycling facilities')),
                ('service_hours_start', models.TimeField(blank=True, help_text='Start time for waste collection services', null=True)),
                ('service_hours_end', models.TimeField(blank=True, help_text='End time for waste collection services', null=True)),
                ('emergency_collection_available', models.BooleanField(default=False, help_text='Provider offers emergency waste collection')),
                ('weekend_collection_available', models.BooleanField(default=False, help_text='Provider offers weekend waste collection')),
                ('public_liability_insurance', models.BooleanField(default=False)),
                ('public_liability_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('employers_liability_insurance', models.BooleanField(default=False)),
                ('employers_liability_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('vehicle_insurance', models.BooleanField(default=False)),
                ('vehicle_insurance_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_jobs_completed', models.IntegerField(default=0)),
                ('total_weight_collected_kg', models.DecimalField(decimal_places=2, default=0, help_text='Total waste collected in kg', max_digits=12)),
                ('total_recycled_kg', models.DecimalField(decimal_places=2, default=0, help_text='Total waste recycled in kg', max_digits=12)),
                ('collection_efficiency_rating', models.DecimalField(decimal_places=1, default=0.0, help_text='Collection efficiency rating (0-10)', max_digits=3)),
                ('average_response_time_minutes', models.IntegerField(default=0, help_text='Average response time in minutes')),
                ('completion_rate', models.DecimalField(decimal_places=2, default=100, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('commission_rate', models.DecimalField(decimal_places=2, default=15, help_text='Platform commission percentage', max_digits=5)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('auto_accept_jobs', models.BooleanField(default=False)),
                ('max_distance_km', models.IntegerField(default=10, help_text='Maximum distance willing to travel')),
                ('min_job_value', models.DecimalField(decimal_places=2, default=10, max_digits=10)),
                ('notification_enabled', models.BooleanField(default=True)),
                ('vehicle_count', models.PositiveIntegerField(default=0)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Service Provider',
                'verbose_name_plural': 'Service Providers',
                'db_table': 'service_providers',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderThrough',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=15, max_digits=5)),
            ],
            options={
                'db_table': 'service_provider_through',
            },
        ),
        migrations.CreateModel(
            name='WasteCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(choices=[('general', 'General Trash Collection'), ('plastic', 'Plastic-only Collection'), ('metal', 'Scrap Metal Collection'), ('ewaste', 'E-Waste Collection'), ('organic', 'Organic Waste Collection'), ('hazardous', 'Hazardous Waste'), ('paper', 'Paper & Cardboard'), ('glass', 'Glass Collection'), ('construction', 'Construction Debris'), ('textile', 'Textile & Clothing')], max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('base_price_per_kg', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_special_license', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Waste Category',
                'verbose_name_plural': 'Waste Categories',
                'db_table': 'waste_categories',
            },
        ),
    ]

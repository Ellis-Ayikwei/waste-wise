# Generated by Django 5.2.4 on 2025-08-04 23:18

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Job', '0004_initial'),
        ('Payment', '0003_initial'),
        ('Provider', '0001_initial'),
        ('Services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='providerreview',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provider_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='savedjob',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='Job.job'),
        ),
        migrations.AddField(
            model_name='savedjob',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='insurance_policies',
            field=models.ManyToManyField(blank=True, related_name='service_providers', to='Provider.insurancepolicy'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, related_name='service_providers', to='Payment.paymentmethod'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='service_categories',
            field=models.ManyToManyField(related_name='service_providers', to='Services.servicecategory', verbose_name='Service Categories'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='services_offered',
            field=models.ManyToManyField(blank=True, related_name='service_providers', to='Services.services'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='specializations',
            field=models.ManyToManyField(blank=True, related_name='specializing_providers', to='Services.servicecategory', verbose_name='Specializations'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='user',
            field=models.OneToOneField(limit_choices_to={'user_type': 'provider'}, on_delete=django.db.models.deletion.CASCADE, related_name='service_provider_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicearea',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_areas', to='Provider.serviceprovider'),
        ),
        migrations.AddField(
            model_name='providerreview',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='Provider.serviceprovider'),
        ),
        migrations.AddField(
            model_name='providerpayment',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='Provider.serviceprovider'),
        ),
        migrations.AddField(
            model_name='providerdocument',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='Provider.serviceprovider'),
        ),
        migrations.AddField(
            model_name='insurancepolicy',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_insurance_policies', to='Provider.serviceprovider'),
        ),
        migrations.AddField(
            model_name='serviceprovideraddress',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='Provider.serviceprovider'),
        ),
        migrations.AddField(
            model_name='serviceproviderthrough',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Provider.serviceprovider'),
        ),
        migrations.AddField(
            model_name='serviceproviderthrough',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Services.services'),
        ),
        migrations.AddField(
            model_name='watchedjob',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watched_by', to='Job.job'),
        ),
        migrations.AddField(
            model_name='watchedjob',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watched_jobs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='savedjob',
            unique_together={('job', 'provider')},
        ),
        migrations.AddIndex(
            model_name='serviceprovider',
            index=models.Index(fields=['verification_status'], name='service_pro_verific_2de249_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceprovider',
            index=django.contrib.postgres.indexes.GistIndex(fields=['base_location'], name='service_pro_base_lo_1c15f5_gist'),
        ),
        migrations.AddIndex(
            model_name='servicearea',
            index=django.contrib.postgres.indexes.GistIndex(fields=['area'], name='service_are_area_dc0139_gist'),
        ),
        migrations.AddIndex(
            model_name='providerdocument',
            index=models.Index(fields=['document_type'], name='provider_do_documen_0a9e03_idx'),
        ),
        migrations.AddIndex(
            model_name='providerdocument',
            index=models.Index(fields=['status'], name='provider_do_status_310444_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceprovideraddress',
            index=models.Index(fields=['address_type'], name='service_pro_address_e199d9_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceprovideraddress',
            index=models.Index(fields=['is_primary'], name='service_pro_is_prim_183dfe_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceprovideraddress',
            index=models.Index(fields=['is_verified'], name='service_pro_is_veri_032e0e_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceprovideraddress',
            index=models.Index(fields=['country'], name='service_pro_country_525d5b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='serviceprovideraddress',
            unique_together={('provider', 'address_type', 'address_line_1', 'city', 'postcode')},
        ),
        migrations.AlterUniqueTogether(
            name='serviceproviderthrough',
            unique_together={('service', 'provider')},
        ),
        migrations.AlterUniqueTogether(
            name='watchedjob',
            unique_together={('job', 'provider')},
        ),
    ]

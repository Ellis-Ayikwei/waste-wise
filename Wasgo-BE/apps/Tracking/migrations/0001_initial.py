# Generated by Django 5.2.5 on 2025-08-24 12:32

import django.contrib.gis.db.models.fields
import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BinTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tracking_type', models.CharField(choices=[('fill_level', 'Fill Level Update'), ('maintenance', 'Maintenance Update'), ('collection', 'Collection Update'), ('alert', 'Alert Generated'), ('sensor_data', 'Sensor Data Update')], max_length=20)),
                ('fill_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('fill_status', models.CharField(max_length=20)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('battery_level', models.IntegerField(blank=True, null=True)),
                ('signal_strength', models.IntegerField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('maintenance_required', models.BooleanField(default=False)),
                ('maintenance_type', models.CharField(blank=True, max_length=50)),
                ('maintenance_notes', models.TextField(blank=True)),
                ('last_collection_date', models.DateTimeField(blank=True, null=True)),
                ('next_collection_date', models.DateTimeField(blank=True, null=True)),
                ('collection_frequency_days', models.IntegerField(blank=True, null=True)),
                ('waste_volume_m3', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('waste_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status_message', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'bin_tracking',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrackingUpdate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('update_type', models.CharField(choices=[('location', 'Location Update'), ('status', 'Status Update'), ('delay', 'Delay Notification'), ('completion', 'Completion Update'), ('waste_collection', 'Waste Collection Update'), ('bin_status', 'Bin Status Update'), ('route_update', 'Route Update'), ('environmental', 'Environmental Impact Update')], max_length=20)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='GPS coordinates', null=True, srid=4326)),
                ('location_address', models.CharField(blank=True, help_text='Human readable address', max_length=255)),
                ('location_json', models.JSONField(blank=True, null=True)),
                ('status_message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('estimated_delay', models.DurationField(blank=True, null=True)),
                ('waste_collected_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of waste collected in kg', max_digits=10, null=True)),
                ('waste_type', models.CharField(blank=True, help_text='Type of waste being collected', max_length=20)),
                ('collection_method', models.CharField(blank=True, help_text='Method used for collection', max_length=20)),
                ('bin_id', models.CharField(blank=True, help_text='ID of the bin being serviced', max_length=50)),
                ('fill_level_before', models.IntegerField(blank=True, help_text='Bin fill level before collection (%)', null=True)),
                ('fill_level_after', models.IntegerField(blank=True, help_text='Bin fill level after collection (%)', null=True)),
                ('co2_emissions_kg', models.DecimalField(blank=True, decimal_places=2, help_text='CO2 emissions for this update', max_digits=8, null=True)),
                ('recycling_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of waste recycled', max_digits=5, null=True)),
                ('route_efficiency', models.DecimalField(blank=True, decimal_places=2, help_text='Route efficiency percentage', max_digits=5, null=True)),
                ('distance_traveled_km', models.DecimalField(blank=True, decimal_places=2, help_text='Distance traveled in km', max_digits=8, null=True)),
                ('fuel_consumed_liters', models.DecimalField(blank=True, decimal_places=2, help_text='Fuel consumed in liters', max_digits=8, null=True)),
                ('weather_conditions', models.CharField(blank=True, help_text='Weather conditions during update', max_length=100)),
                ('traffic_conditions', models.CharField(blank=True, help_text='Traffic conditions during update', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes for this update')),
            ],
            options={
                'db_table': 'tracking_update',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WasteCollectionTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stage', models.CharField(choices=[('scheduled', 'Scheduled'), ('en_route', 'En Route to Collection Point'), ('arrived', 'Arrived at Collection Point'), ('collecting', 'Collecting Waste'), ('collected', 'Waste Collected'), ('en_route_disposal', 'En Route to Disposal'), ('disposed', 'Waste Disposed'), ('returning', 'Returning to Base'), ('completed', 'Collection Completed')], max_length=20)),
                ('current_location', django.contrib.gis.db.models.fields.PointField(help_text='Current GPS location', srid=4326)),
                ('location_address', models.CharField(blank=True, max_length=255)),
                ('waste_collected_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bins_serviced', models.IntegerField(default=0)),
                ('collection_time_minutes', models.IntegerField(blank=True, null=True)),
                ('co2_emissions_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('recycling_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('distance_traveled_km', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('route_efficiency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status_message', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'waste_collection_tracking',
                'ordering': ['-created_at'],
            },
        ),
    ]

# Generated by Django 5.2.5 on 2025-08-24 12:32

import django.contrib.gis.db.models.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Service area name', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(help_text='Geographic boundary of the service area', srid=4326)),
                ('center_point', django.contrib.gis.db.models.fields.PointField(help_text='Center point of the service area', srid=4326)),
                ('service_radius_km', models.DecimalField(decimal_places=2, help_text='Service radius in kilometers', max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('population_estimate', models.IntegerField(blank=True, null=True)),
                ('business_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Service Area',
                'verbose_name_plural': 'Service Areas',
                'db_table': 'service_areas',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Location name or identifier', max_length=255)),
                ('location_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('public', 'Public Space'), ('waste_facility', 'Waste Facility'), ('recycling_center', 'Recycling Center'), ('landfill', 'Landfill'), ('transfer_station', 'Transfer Station')], default='residential', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('postcode', models.CharField(max_length=20)),
                ('coordinates', django.contrib.gis.db.models.fields.PointField(help_text='GPS coordinates of the location', srid=4326)),
                ('latitude', models.DecimalField(blank=True, decimal_places=20, max_digits=30, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=20, max_digits=30, null=True)),
                ('contact_name', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('use_main_contact', models.BooleanField(default=True)),
                ('waste_collection_day', models.CharField(blank=True, help_text='Day of week for waste collection', max_length=20)),
                ('waste_collection_time', models.TimeField(blank=True, help_text='Preferred collection time', null=True)),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for waste collection')),
                ('estimated_waste_volume_m3', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated monthly waste volume in cubic meters', max_digits=8, null=True)),
                ('waste_types_accepted', models.JSONField(blank=True, default=list, help_text='Types of waste accepted at this location')),
                ('has_vehicle_access', models.BooleanField(default=True, help_text='Can waste collection vehicles access this location')),
                ('access_notes', models.TextField(blank=True, help_text='Notes about vehicle access')),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Location has been verified')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'location',
                'managed': True,
                'indexes': [models.Index(fields=['location_type'], name='location_locatio_c27733_idx'), models.Index(fields=['city'], name='location_city_5c7276_idx'), models.Index(fields=['is_active'], name='location_is_acti_f48df8_idx')],
            },
        ),
    ]
